# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# updated with new secret value in keyvaut (mysecret)
trigger:
- main

pool:
  vmImage: windows-latest
variables:
- group: DevOps-Intro-Secrets(DEV)
- name: my-passed-variable
  value: $[variables.mysecret] # uses runtime expression

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      echo 'Build.SourcesDirectory=' $(Build.SourcesDirectory)
      echo '$(EncryptionKey)' > test1.txt
#    workingDirectory: '$(Pipeline.Workspace)'
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      
      echo '$(mysecret)' > test2.txt
#    workingDirectory: '$(Pipeline.Workspace)'
#- script: "echo $(mysecret) | secret1.txt" # uses macro syntax
#- script: "echo $(my-passed-variable) > $(Pipeline.Workspace)/secret2.txt"
#- task: CopyFiles@2
#  inputs:
    #sourceFolder: # Optional
    #contents: '**' 
#    targetFolder: 
    #cleanTargetFolder: false # Optional
    #overWrite: false # Optional
    #flattenFolders: false # Optional
    #preserveTimestamp: false # Optional
    #retryCount: 0 # Optional
    #ignoreMakeDirErrors: false # Optional
- task: CopyFiles@2
  displayName: Copy ARM templates
  inputs:
    SourceFolder: D:\a\1\s\
    Contents: |
      *.txt
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Packages'

- task: PublishPipelineArtifact@1
  displayName: 'Publish txt'
  inputs:
    path: '$(Build.ArtifactStagingDirectory)/Packages'
    artifact: artifact 

- script: "echo Build.Sources=$(Build.Sources)"

- script: "echo Pipeline.Workspace=$(Pipeline.Workspace)"

- script: "echo Build.ArtifactStagingDirectory=$(Build.ArtifactStagingDirectory)"
