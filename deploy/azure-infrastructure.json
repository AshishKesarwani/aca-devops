{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Storage.SkuName": {
      "defaultValue": 0,
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "type": "String"
    },
    "StorageAccountTableName": {
      "type": "String"
    },
    "Application.Name": {
      "type": "String"
    },
    "Application.Environment": {
      "type": "String"
    },
    "Application.Version": {
      "type": "String"
    },
    "Release.Name": {
      "type": "String"
    },
    "Release.RequestedFor": {
      "type": "String"
    },
    "Release.SourceCodeBranch": {
      "type": "String"
    },
    "Release.TriggerType": {
      "type": "String"
    },
    "Release.Url": {
      "type": "String"
    },
    "AppSvcPlan.SkuName": {
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "D1",
        "B1"
      ],
      "type": "String",
      "metadata": {
        "description": "Provide the pricing tier of the App Service Plan."
      }
    },
    "Keyvault.SkuName": {
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "type": "String",
      "metadata": {
        "description": "Provide the pricing tier of the key vault."
      }
    },
    "Keyvault.TenantId": {
      "type": "String"
    },
    "Keyvault.ObjectId": {
      "type": "String"
    },
    "Keyvault.SecretName": {
      "type": "String",
      "metadata": {
        "description": "Specifies the name of the secret that you want to create."
      }
    },
    "Keyvault.SecretValue": {
      "type": "SecureString",
      "metadata": {
        "description": "Value of the secret from Key Vault."
      }
    }
  },
  "variables": {
    "KeyVaultName": "[concat(parameters('Application.Name'), '-vault')]",
    "KeyVaultResourceId": "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]",
    "AppServicePlanName": "[concat(parameters('Application.Name'), 'Plan')]",
    "AppServiceName": "[parameters('Application.Name')]",
    "AppServiceResourceId": "[resourceId('Microsoft.Web/sites', variables('AppServiceName'))]",
    "StorageAccountName": "[concat(tolower(replace(parameters('Application.Name'),'-','')), 'storage')]",
    "StorageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
    "ApiVersion": "[providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]]",
    "Tags": {
      "environment": "[parameters('Application.Environment')]",
      "version": "[parameters('Application.Version')]",
      "releaseName": "[parameters('Release.Name')]",
      "createdBy": "[parameters('Release.Url')]",
      "branch": "[parameters('Release.SourceCodeBranch')]",
      "triggeredBy": "[parameters('Release.RequestedFor')]",
      "triggerType": "[parameters('Release.TriggerType')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/tags",
      "apiVersion": "2019-10-01",
      "name": "default",
      "dependsOn": [],
      "properties": {
        "tags": "[variables('Tags')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('StorageAccountName')]",
      "location": "[resourceGroup().location]",
      "tags": "[variables('Tags')]",
      "sku": {
        "name": "[parameters('Storage.SkuName')]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "supportsHttpsTrafficOnly": true
      },
      "resources": [
        {
          "type": "tableServices/tables",
          "apiVersion": "2019-06-01",
          "name": "[concat('default/', parameters('StorageAccountTableName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Web/serverFarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('AppServicePlanName')]",
      "location": "[resourceGroup().location]",
      "tags": "[variables('Tags')]",
      "sku": {
        "name": "[parameters('AppSvcPlan.SkuName')]",
        "capacity": 1
      },
      "kind": "app",
      "properties": {
        "reserved": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-02-01",
      "name": "[variables('AppServiceName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('AppServicePlanName'))]"
      ],
      "tags": "[variables('Tags')]",
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('AppServiceName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('AppServicePlanName'))]",
        "siteConfig": {
          "connectionStrings": [
            {
              "name": "StorageAccount.ConnectionString",
              "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('StorageAccountName'), ';AccountKey=', listKeys(variables('StorageAccountResourceId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value, ';EndpointSuffix=core.windows.net')]"
            }
          ],
          "appSettings": [
            {
              "name": "StorageAccount.TableName",
              "value": "[parameters('StorageAccountTableName')]"
            },
            {
              "name": "VaultUri",
              "value": "[concat('https://',variables('KeyVaultName'),'.vault.azure.net/')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2018-02-14",
      "name": "[variables('KeyVaultName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('AppServiceName'))]"
      ],
      "tags": "[variables('Tags')]",
      "properties": {
        "tenantId": "[parameters('Keyvault.TenantId')]",
        "sku": {
          "name": "[parameters('Keyvault.SkuName')]",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        },
        "enabledForTemplateDeployment": true,
        "accessPolicies": [
          {
            "tenantId": "[parameters('Keyvault.TenantId')]",
            "objectId": "[parameters('Keyvault.ObjectId')]",
            "permissions": {
              "keys": [
                "list",
                "get"
              ],
              "secrets": [
                "list",
                "get"
              ]
            }
          },
          {
            "tenantId": "[parameters('Keyvault.TenantId')]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('AppServiceName')),'2019-08-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "list",
                "get"
              ]
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2018-02-14",
      "name": "[concat(variables('keyVaultName'), '/', parameters('Keyvault.SecretName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('KeyVaultName'))]",
        "[resourceId('Microsoft.Web/sites', variables('AppServiceName'))]"
      ],
      "tags": "[variables('Tags')]",
      "properties": {
        "value": "[parameters('Keyvault.SecretValue')]"
      }
    }
  ],
  "outputs": {}
}